{# vim: set ft=javascript: #}

var __theme__ = {{ theme|tojson }};
var __themeSelected__ = false;

var themeLink = document.querySelector('.theme');
var faviconLink = document.querySelector('link[rel="icon"]');

function reversed() {
  return /reversed/.exec(document.documentElement.className);
}

function getThemeURL(theme) {
  return '/style-' + theme + '.css';
}

function parseThemeURL(url) {
  return /style-([^.]+)\.css$/.exec(url)[1];
}

function isThemeLoaded() {
  var css = document.styleSheets[0];
  return css && (__theme__ == parseThemeURL(css.href)) && css.cssRules;
}

function guessTheme() {
  var regex = /[?&#]theme=([^&#]+)/;
  var hash = location.hash;
  var href = location.href;
  var theme = (regex.exec(hash) || regex.exec(href) || [])[1];
  if (theme) {
    return theme;
  }
  var date = new Date();
  var eventKey = (date.getMonth() + 1) + '/' + date.getDate();
  var events = {{ events|tojson }};
  theme = events[eventKey];
  return theme || {{ theme|tojson }};
}

function updateFavicon() {
  if (!isThemeLoaded()) {
    setTimeout(arguments.callee, 100);
    return;
  }
  var favicon = document.createElement('canvas');
  favicon.width = 16;
  favicon.height = 16;
  var ctx = favicon.getContext('2d');
  var horizontalDirections = ['left', 'middle', 'right'];
  for (var i = 0; i < horizontalDirections.length; ++i) {
    var h = horizontalDirections[
      reversed() ? horizontalDirections.length - i - 1 : i
    ];
    var col = document.querySelector('.emblem-' + h);
    var topCell = col.querySelector('.emblem-top');
    var bottomCell = col.querySelector('.emblem-bottom');
    var left = 1 + i * 5;
    ctx.fillStyle = getComputedStyle(topCell).backgroundColor;
    if (bottomCell.offsetParent) {
      // shape: i
      ctx.fillRect(left, 1, 4, 7);
      ctx.fillStyle = getComputedStyle(bottomCell).backgroundColor;
      ctx.fillRect(left, 9, 4, 6);
    } else {
      // shape: I
      ctx.fillRect(left, 1, 4, 14);
    }
  }
  faviconLink.href = favicon.toDataURL('image/icon');
}

function selectTheme(theme) {
  __theme__ = theme;
  __themeSelected__ = true;
  themeLink.setAttribute('href', getThemeURL(theme));
}

function selectGuessedTheme() {
  var theme = guessTheme();
  if (theme != __theme__) {
    selectTheme(theme);
  }
  return theme;
}

// Select the initial theme.
selectGuessedTheme();

// Load jQuery and init instant theme selection when the hash changed.
window.onhashchange = function() {
  var done = false;
  var jQueryScript = document.createElement('script');
  jQueryScript.src = '//code.jquery.com/jquery-1.11.2.min.js';
  jQueryScript.onload = jQueryScript.onreadystatechange = function() {
    var state = this.readyState;
    if (!done && (!state || /loaded|complete/.exec(state))) {
      this.onload = this.onreadystatechange = null;
      done = true;
      initThemeSelection();
      selectGuessedTheme();
    }
  };
  document.head.appendChild(jQueryScript);
};

function initThemeSelection() {
  var $body = $(document.body);
  var $themeStyle = $('<style>').appendTo(document.head);
  // Override selectTheme() to re-draw the page.
  selectTheme = function (theme) {
    __theme__ = theme;
    isThemeLoaded = function() { return false; };
    $body.hide();
    $.get(getThemeURL(theme), function(css) {
      try {
        $themeStyle.text(css);
      } catch (e) {
        // IE8 throws SCRIPT65535.
        location.href = location.href;
        location.reload();
        return;
      }
      setTimeout(function() {
        // Re-draw the page.
        isThemeLoaded = function() {
          return $body.css('opacity') != 0;
        };
        $body.fadeIn();
        updateFavicon();
      }, 10);
    });
    // <link> for theme is not required.
    $(themeLink).remove();
  }
  window.onhashchange = selectGuessedTheme;
}
