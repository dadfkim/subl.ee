{# vim: set ft=css: #}

{% set base_font_size = 17 %}

{% macro setdefault(dict, key, value) %}
  {# NOTE: the below if-block is workaround for calling #}
  {# Python functions without the caller parameter. #}
  {% if dict.setdefault(key, value) %}{% endif %}
{% endmacro %}

{% set colors = {
  'background': '#fff',
  'text': '#000',
  'link': '#00f',
}|update(colors) %}
{{ setdefault(colors, 'title', colors.text) }}
{{ setdefault(colors, 'title_index', colors.title) }}
{{ setdefault(colors, 'blur', colors.text) }}
{{ setdefault(colors, 'vlink', colors.link) }}

{% set text = {
  'font': 'Hind',
  'generic': 'sans-serif',
  'weight': 400,
}|update(text) %}

{% set title = {}|update(text)|update(title) %}
{% for _text in [text, title] %}
  {{ setdefault(_text, 'css', 'https://fonts.googleapis.com/css?family=' ~
                _text.font|replace(' ', '+') ~ ':' ~ _text.weight) }}
{% endfor %}

{% if text.css %}
  @import url({{ text.css }});
{% endif %}

{% if title.css and title.css != text.css %}
  @import url({{ title.css }});
{% endif %}

* {
  margin: 0;
  padding: 0;
  border: none;
  font-size: 1em;
  line-height: 1.5;
  text-decoration: none;
  clear: left;
}

html {
  font-size: {{ base_font_size }}px;
}

body {
  position: relative;
  max-width: 50rem;
  font-family: '{{ text.font }}', {{ text.generic }};
  font-weight: {{ text.weight }};
  color: {{ colors.text }};
  background-color: {{ colors.background }};
  background-repeat: no-repeat;
  white-space: normal;
  -webkit-font-smoothing: antialiased;
}

html, body {
  min-height: 100%;
}

header {
  margin-bottom: 1.5rem;
  line-height: 1;
}

footer {
  margin-top: 2rem;
  font-size: 0.8em;
  color: {{ colors.blur }};
}

h1, h2, h3, h4, h5, h6, p, ul, ol, dl, hr, pre {
  margin-bottom: 1rem;
}

h1, h2 {
  {% if (text.font, text.generic) != (title.font, title.generic) %}
    font-family: '{{ title.font }}', {{ title.generic }};
  {% endif %}
  font-weight: {{ title.weight }};
  color: {{ colors.title }};
}

h1 {
  margin-right: 1.5rem;
  padding-right: 96px;
  white-space: nowrap;
  font-size: 2em;
}

h2 {
  font-size: 1.3em;
}

h1:target, h2:target, h3:target, h4:target, h5:target, h6:target {
  text-decoration: underline;
}

a:link {
  color: {{ colors.link }};
}

a:visited {
  color: {{ colors.vlink }};
}

a:hover {
  text-decoration: underline;
}

ul li {
  position: relative;
  list-style: none;
  padding-left: 0.8rem;
}

ul li:before {
  position: absolute;
  left: 0;
  content: '-';
  color: {{ colors.blur }};
}

/* IE7 can't handle :before pseudo-element */
*:first-child+html ul li {
  list-style: disc;
  margin-left: 0.8em;
  padding-left: 0;
}

dd {
  margin-left: 0.8rem;
  margin-bottom: 1rem;
}
dd ul, dd ol {
  margin-left: -0.8rem;
}


dd.attr, dd.note {
  margin-left: 0;
  margin-bottom: 0;
}

dt, dd p, dd ul, dd ol, dd dl, dd hr, dt.label {
  margin-top: 0.6rem;
  margin-bottom: 0;
}

dl, dt, dd {
  margin-top: 1rem;
}

dt + dt {
  margin-top: 0;
}

dt.label {
  font-size: 0.8rem;
  color: {{ colors.blur }};
  line-height: 1;
}

dd.attr {
  margin-top: 0;
}

dd.note {
  margin-top: 0;
  font-size: 0.8rem;
  font-style: italic;
}

hr {
  margin-top: 1.5rem;
  height: 0.1rem;
  background-color: {{ rgba(colors.blur, 0.1) }};
}

sup, sub {
  font-size: 0.5rem;
}

abbr, acronym {
  cursor: help;
}

i {
  color: {{ colors.title }};
}

kbd {
  display: inline-block;
  font-family: inherit;
  font-size: 0.75em;
  line-height: 1;
  background: {{ rgba(colors.blur, 0.1) }};
  border: 1px solid {{ rgba(colors.blur, 0.3) }};
  padding: 0.2rem 0.3rem;
  vertical-align: middle;
}

/* Emblem */

{% set emblem_boundary = 90 %}
{% set emblem_plate_margin = 2 %}
{% set emblem_width = emblem_boundary - 2 * emblem_plate_margin %}

.emblem-wrap a {
  display: block;
  width: {{ emblem_boundary }}px;
}

.emblem {
  position: relative;
  width: {{ emblem_boundary }}px;
  height: {{ emblem_boundary }}px;
  margin: -3px;
}

.emblem div {
  width: {{ (emblem_width - 4 * emblem_plate_margin) / 3 }}px;
  height: {{ emblem_width }}px;
  margin: {{ emblem_plate_margin }}px;
  float: left;
  clear: none;
}

.emblem i {
  position: relative;
  display: block;
  height: {{ emblem_width / 2 - emblem_plate_margin }}px;
  background-repeat: no-repeat;
}

.emblem .emblem-bottom {
  margin-top: {{ emblem_plate_margin * 2 }}px;
}

{% for h in ['left', 'middle', 'right'] %}
  .emblem-{{ h }} .emblem-top {
    background-color: {{ emblem.colors[loop.index]|d(emblem.colors[0]) }};
  }
  .emblem-{{ h }} .emblem-bottom {
    background-color: {{ emblem.colors[loop.index + 3]|d(emblem.colors[0]) }};
  }
  {% if emblem.shape is not splitted_trigram_bar(loop.index0) %}
    .emblem-{{ h }} .emblem-top {
      height: {{ emblem_width }}px;
    }
    .emblem-{{ h }} .emblem-bottom {
      display: none;
    }
  {% endif %}
{% endfor %}

/* Index */

.index body {
  white-space: nowrap;
  max-width: 35rem;
}

.index main {
  font-size: 1.05em;
}

.index header {
  margin-bottom: 2rem;
}

.index h1 {
  display: none;
}

.index h2 {
  margin-bottom: 0;
  font-size: 1.2em;
  color: {{ colors.title_index }};
}

/* Resume */

.resume .emblem-wrap {
  position: absolute;
  right: 0;
  margin: 0 0.3rem;
}

/* Error */

.error h1 {
  white-space: normal;
}

.error footer {
  margin-top: 0;
}

/* Themes */

.themes ul {
  display: flex;
  flex-wrap: wrap;
}

.themes li {
  width: 20%;
  padding-left: 0;
  white-space: nowrap;
}

.themes li:before {
  display: none;
}

.themes a.selected {
  color: {{ colors.background }};
  background: {{ colors.link }};
  padding: 0 0.5em 0 0.2em;
}

.themes .favicon {
  vertical-align: middle;
}

/* Responsive Layout */

@media screen and (max-width: 50rem) {
  body { margin: 3em 5%; }
  .themes li { width: 25%; }
}

@media screen and (max-width: 550px) {
  body {
    margin: 2em 2%;
    width: auto;
  }

  h1 {
    padding-right: 48px;
  }

  .hard-returns br {
    display: none;
  }

  .index body {
    margin-top: 2em;
    white-space: normal;
  }

  .index main {
    font-size: 1em;
  }

  .resume body {
    margin-top: 1em;
  }

  .resume .emblem-wrap {
    width: 45px;
  }

  .resume .emblem {
    margin: 0;
    transform: scale(0.5);
    transform-origin: 0 0;
  }

  .themes li {
    width: 33%;
  }
}
