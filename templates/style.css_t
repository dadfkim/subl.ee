{# vim: set ft=css: #}

{% set title_color = title_color or emblem_colors[0] %}
{% set base_font_size = 18 %}
{% macro rem(prop, rem) %}
  {{ prop }}: {{ (base_font_size * rem)|round|int }}px;
  {{ prop }}: {{ rem }}rem;
{% endmacro %}

@import url(//fonts.googleapis.com/css?family=Roboto+Slab:400,700);

* {
  margin: 0;
  padding: 0;
  border: none;
  font-size: 1em;
  line-height: 1.6;
  clear: left;
}

html {
  font-size: {{ base_font_size }}px;
}

body {
  position: relative;
  margin: 3em 10%;
  {{ rem('max-width', 40) }}
  font-family: 'Roboto Slab', serif;
  font-weight: 400;
  color: {{ text_color }};
  background: {{ background_color }};
  white-space: normal;
  transition: margin 0.2s;
  -webkit-font-smoothing: antialiased;
}

header {
  {{ rem('margin-bottom', 1) }};
  line-height: 1;
}

footer {
  {{ rem('padding-top', 1) }};
}

footer p {
  font-size: 0.75em;
  color: {{ copyright_color }};
}

h1, h2, h3, h4, h5, h6, p, ul, ol, dl, hr {
  {{ rem('margin-bottom', 1) }};
}

h1 {
  font-weight: 700;
  font-size: 2em;
  color: {{ title_color }};
}

h2 {
  font-weight: 400;
  font-size: 1.25em;
  color: {{ title_color }};
}

a:link, a:visited {
  text-decoration: none;
}

a:link {
  color: {{ link_color }};
}

a:visited {
  color: {{ vlink_color or link_color }};
}

a:hover {
  text-decoration: underline;
}

ul li {
  position: relative;
  list-style: none;
  {{ rem('padding-left', 0.75) }}
}

ul li:before {
  position: absolute;
  left: 0;
  /* bullet: http://www.fileformat.info/info/unicode/char/2022/index.htm */
  content: '\2022';
  color: {{ copyright_color }};
}

/* ie7 can't handle :before pseudo-element */
*:first-child+html ul li {
  list-style: disc;
  margin-left: 0.75em;
  padding-left: 0;
}

dt {
  {{ rem('margin-top', 1) }}
}

dd {
  {{ rem('margin-left', 0.75) }}
}

dd.attr, dd.note {
  margin-left: 0;
}

dd, dd p, dd ul, dd ol, dd dl, dd hr {
  {{ rem('margin-top', 0.5) }}
  margin-bottom: 0;
}

dd.note {
  margin-top: 0;
  {{ rem('font-size', 0.75) }}
  font-style: italic;
}

dt.label {
  {{ rem('margin-bottom', -0.5) }}
  {{ rem('font-size', 0.75) }}
  color: {{ copyright_color }};
  line-height: 1;
}

dt.label + dt {
  {{ rem('margin-top', 0.5) }}
}

dl.attrs dt.label {
  {{ rem('margin-top', 0.5) }}
}

hr {
  {{ rem('margin-top', 1.5) }};
  {{ rem('height', 0.1) }}
  background-color: {{ rgba(copyright_color, 0.1) }};
}

sup, sub {
  {{ rem('font-size', 0.5) }}
}

abbr, acronym {
  cursor: help;
}

/* emblem */

.emblem {
  position: relative;
  width: 96px;
  height: 96px;
  margin: -6px;
}

.emblem i {
  position: absolute;
  display: block;
  float: left;
  width: 25%;
  height: {{ 39 / 0.96 }}%;
}

{% set compat = ['', '-webkit-', '-moz-', '-o-'] %}

{% macro emblem_keyframes(name, color, blink) %}
  {% for hack in compat %}
    @{{ hack }}keyframes {{ name }} {
      from {
        box-shadow:
          0 0 0 {{ color }},
          0 0 0 {{ rgba(color, 0) }},
          0 0 0 {{ background_color }};
        outline-color: {{ rgba(background_color, 0) }};
      }
      to {
        box-shadow:
          0 0 {{ 32 * blink }}px {{ rgba(color, 0.25) }},
          0 0 {{ 12 * blink }}px {{ rgba(color, 0.5) }},
          0 0 {{ 2 * blink }}px {{ background_color }};
        outline-color: {{ rgba(background_color, 0.25) }};
      }
    }
  {% endfor %}
{% endmacro %}

{% for x in range(3) %}
  {% if emblem_shape[x] == 'I' %}
    i.emblem-{{ x + 1 }} {
      height: {{ (39 + 6 + 39) / 0.96 }}%;
    }
    i.emblem-{{ x + 4 }} {
      display: none;
    }
  {% endif %}
{% endfor %}

{% set emblem_blinks = emblem_blinks or [0, 0, 0, 0] %}
{% for x in range(1, 1 + 6) %}
  {% set color = emblem_colors[x] %}
  {% set blink = emblem_blinks[x] if emblem_blinks else 0 %}
  i.emblem-{{ x }} {
    {% if x < 4 %}
      top: {{ 6 / 0.96 }}%;
    {% else %}
      top: {{ (6 + 39 + 6) / 0.96 }}%;
    {% endif %}
    {% if x % 3 == 1 %}
      left: {{ 6 / 0.96 }}%;
    {% elif x % 3 == 2 %}
      left: {{ (6 + 24 + 6) / 0.96 }}%;
    {% elif x % 3 == 0 %}
      left: {{ (6 + 24 + 6 + 24 + 6) / 0.96 }}%;
    {% endif %}
    background: {{ color }};
  }
  {% if blink %}
    {{ emblem_keyframes('emblem-' ~ suffix, color, blink) }}
    i.emblem-{{ x }} {
      outline: 1px solid;
      {% for hack in compat %}
        {{ hack }}animation:
          emblem-{{ suffix }} 5s ease-in-out infinite alternate;
      {% endfor %}
      /* Disable on IE6, IE7, IE8, IE9. */
      outline-style: none\9;
    }
  {% endif %}
{% endfor %}

/* profile */

.profile {
  white-space: nowrap;
}

.profile header {
  {{ rem('margin-bottom', 2) }};
}

.profile h1 {
  display: none;
}

.profile h2 {
  margin-bottom: 0;
  font-size: 1em;
}

/* error */

.error h1 {
  color: {{ link_color }};
}

.error footer {
  padding-top: 0;
}

/* themes */

.themes a.selected {
  color: {{ background_color }};
  background: {{ link_color }};
  padding: 0 0.5em;
}

/* resume */

.resume .emblem {
  position: absolute;
  right: 0;
  margin: 0.25em;
}

.resume h1 {
  {{ rem('margin-right', 1.5) }}
  padding-right: 96px;
}

/* responsive layout */

@media screen and (max-width: 40rem) {
  body {
    margin: 2em 2%;
    width: auto;
  }

  .profile {
    white-space: normal;
  }

  .hard-returns br {
    display: none;
  }

  .resume {
    margin-top: 1em;
  }

  .resume .emblem {
    margin: 0.5em;
    width: 48px;
    height: 48px;
    border-spacing: 3px;
  }

  .resume h1 {
    padding-right: 48px;
  }
}
